#!/usr/bin/env bash

set -eo pipefail

print_help() {
    echo "usage: $(basename "$0") [OPTION]"
    echo "  -e,  --everything             Boostraps a new machine"
    echo "  -h,  --help                   Display this help message"
    echo "  -p,  --packages               Install software packages"
    echo "  -s,  --settings               Adjust system and application settings"
}

main() {
    local dotfiles_dir="$(cd "$(dirname "$0")" && pwd -P)"
    source "$dotfiles_dir/setup/utilities.sh"

    if [ "$#" -eq 0 ]; then
        print_error "no argument specified"
        echo "try '$(basename "$0") --help' for more info." >&2
        exit 1
    else
        local system="$(system_type)"

        for flag in "$@"; do
            case $flag in
            -e|--everything)
                source "$dotfiles_dir/setup/packages.sh"
                source "$dotfiles_dir/setup/symlinks.sh"
                [ "$system" == "macos" ] && source "$dotfiles_dir/setup/mac-defaults.sh"
                shift;;
            -h|--help)
                print_help
                shift;;
            -p|--pacakges)
                if [ "$system" == "macos"]; then
                    source "$dotfiles_dir/setup/packages.sh"
                    source "$dotfiles_dir/setup/mac-defaults.sh"
                fi
                shift;;
            -s|--settings)
                source "$dotfiles_dir/setup/symlinks.sh"
                [ "$system" == "macos" ] && source "$dotfiles_dir/setup/mac-defaults.sh"
                shift;;
            *)
                print_error "invalid argument '$flag'"
                echo "try '$(basename "$0") --help' for more info." >&2
                exit 1;;
            esac
        done
    fi
}

main "$@"
