#!/usr/bin/env bash

bootstrap_path="$(cd "$(dirname "$0")" && pwd)"
source "$bootstrap_path/scripts/utility.sh"

install_packages() {
    if ! installed brew; then
        info_message "Installing Homebrew"
        bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
        brew analytics off
    fi

    info_message "Installing software packages"
    brew bundle -v --no-lock --file="$bootstrap_path/scripts/Brewfile"
    brew cleanup
}

configure_settings() {
    link() {
        echo "$1 â†’ $2"
        ln -snf "$1" "$2"
    }

    local config_dir=${XDG_CONFIG_HOME:-$HOME/.config}
    mkdir -p "$config_dir"

    info_message "Symlinking files"
    link "$bootstrap_path/zsh/zshrc"        "$HOME/.zshrc"
    link "$bootstrap_path/zsh/zshenv"       "$HOME/.zshenv"
    link "$bootstrap_path/git/gitconfig"    "$HOME/.gitconfig"
    link "$bootstrap_path/tmux/tmux.conf"   "$HOME/.tmux.conf"
    link "$bootstrap_path/nvim"             "$config_dir/nvim"

    info_message "Adjusting system settings..."
    source "$bootstrap_path/scripts/mac-defaults.sh"
}

print_help() {
    echo "usage: $(basename "$0") [OPTION]"
    echo "  -a,  --all                    Perform all actions"
    echo "  -h,  --help                   Display this help message"
    echo "  -p,  --packages               Install software packages"
    echo "  -s,  --settings               Adjust system and application settings"
}

if [ "$#" -eq 0 ]; then
    echo "$(basename "$0"): no argument specified" >&2
    echo "run \"$(basename "$0") --help\" for usage options" >&2
    exit 1
else
    for flag in "$@"; do
        case $flag in
        -a|--all)
            install_packages
            configure_settings
            shift;;
        -h|--help)
            print_help
            shift;;
        -p|--pacakges)
            install_packages
            shift;;
        -s|--settings)
            system_settings
            shift;;
        *)
            echo "$(basename "$0"): invalid argument '$flag'" >&2
            echo "run \"$(basename "$0") --help\" for usage options" >&2
            exit 1;;
        esac
    done
fi
